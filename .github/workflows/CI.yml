name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: cargo fmt --check
        run: cargo fmt --all --check


  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rustsec/audit-check@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


  test:
    name: Test
    needs: [ style, audit ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [ stable, beta, nightly ]
        include:
          - build: nightly
            benches: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.build }}

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Build debug
        run: cargo build --all

      - name: Create /var/run/horust directory
        run: sudo mkdir -p /var/run/horust && sudo chmod 777 /var/run/horust

      - name: Test
        run: cargo test

  # Publish latest and releases (e.g. tags with semver) on dockerhub.
  docker-push-release-latest:
    needs: [ test ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@master
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: federicoponzi/horust
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true

  ## This will create a new release in github/releases page. It will run only for tags with semver format.
  create-release:
    name: deploy
    needs: [ test ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-apple-darwin
          - i686-apple-darwin
          - x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build target
        # TODO:   There should be a step to build horustctl.
        run: cross build --release --package horust --bin horust --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/horust
          cd target/${{ matrix.target }}/release
          tar czvf ../../../horust-${{ matrix.target }}.tar.gz horust
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v2
        # TODO: if any of the build step fails, the release should be deleted.
        with:
          files: 'horust*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
